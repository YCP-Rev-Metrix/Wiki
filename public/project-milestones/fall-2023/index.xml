<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fall 2023 on Hugo Relearn Theme</title>
    <link>/project-milestones/fall-2023/index.html</link>
    <description>Recent content in Fall 2023 on Hugo Relearn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="/project-milestones/fall-2023/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MS1 - Minimal Working System</title>
      <link>/project-milestones/fall-2023/ms1---minimal-working-system/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/project-milestones/fall-2023/ms1---minimal-working-system/index.html</guid>
      <description>&lt;h3 id=&#34;milestone-1&#34;&gt;Milestone 1&lt;/h3&gt;
&lt;h4 id=&#34;main-task&#34;&gt;Main Task&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;The task is to demonstrate a minimal working version of your system.&lt;/li&gt;
&lt;li&gt;For a “minimal” working system:
&lt;ul&gt;
&lt;li&gt;Your minimal working system should implement the most important classes in the core object model, and test them comprehensively using unit tests&lt;/li&gt;
&lt;li&gt;What are the most important requirements of your system? You should be able to demonstrate to us that they are at least partially implemented, with appropriate navigation between the components of the system.&lt;/li&gt;
&lt;li&gt;Extremely important: whatever functionality you demonstrate should be implemented in your core object model classes. We do not want to see a hacked-together “prototype” that looks good but internally is spaghetti code. Also, do NOT demonstrate your system components in isolation - those components should be interacting with each other, at least on a basic level.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Because this milestone involves implementing several of your most important use cases or user stories, you will need to make sure that your use cases/user stories are documented. Make sure that your project’s issue tracker has an issue for each use case, and each use case issue has a reasonably detailed textual description of the use case. You can write your use cases as full-blown use cases (see Chapter 9 of UML Distilled). The important concern is that you document the important functionality of the system from the perspective of the user. You will not receive full credit for implementing use cases unless they are documented.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;the-presentation--demonstration&#34;&gt;The Presentation / Demonstration&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Each project team should plan to present for about 45 to 60 minutes. Larger teams (with multiple sub-teams) will likely go longer than that. There will likely also be an extensive question and answer period. All presentations need to be limited to less than two hours (including the question and answer period).&lt;/p&gt;</description>
    </item>
    <item>
      <title>MS2 - 50% Working System</title>
      <link>/project-milestones/fall-2023/ms2---50-working-system/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/project-milestones/fall-2023/ms2---50-working-system/index.html</guid>
      <description>&lt;h3 id=&#34;main-task&#34;&gt;Main Task&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;The task is to demonstrate a 50% working version of your system.&lt;/li&gt;
&lt;li&gt;For a 50% working system:
&lt;ul&gt;
&lt;li&gt;You should have implemented the majority of the pages and navigation between those pages for your UI.&lt;/li&gt;
&lt;li&gt;You should present the major Use Cases by giving a demo of the navigation. This does not mean that every page is fully functional, but rather that the majority of the pages exist, and that button and other navigation functionality works.&lt;/li&gt;
&lt;li&gt;You should be able to use multiple pages to enter, modify, delete information. And, those changes should be persistent, meaning that they are reflected in your database.&lt;/li&gt;
&lt;li&gt;You should be able to show that the various components of your system interact with each other. For example, if you have a system that involves a website, a mobile app (or access via a mobile device), hardware and/or HW simulator, and a backend server/DB, show that you have a functional end-to-end connection between all of those components.&lt;/li&gt;
&lt;li&gt;You should have a significant number of test cases that cover your controller scenarios (not just getter and setter tests). If you have established a CI/CD (continuous integration/continuous development) server, show that it works.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;the-presentation--demonstration&#34;&gt;The Presentation / Demonstration&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Each project team should plan to present for about 45 to 60 minutes. Larger teams (with multiple sub-teams) will likely go longer than that. There will likely also be an extensive question and answer period. All presentations need to be limited to less than two hours (including the question and answer period).&lt;/li&gt;
&lt;li&gt;You should use some presentation software such as PowerPoint or Google Slides. Your slides should contain brief bulleted points and graphics (tables, diagrams, screen captures, wire frames) that provide overall context for your bullet points. Slides should not be a “wall of text”, and please avoid reading your slides or from a prepared script.&lt;/li&gt;
&lt;li&gt;Your presentation should include the following elements:
&lt;ul&gt;
&lt;li&gt;Provide a brief description of the project.&lt;/li&gt;
&lt;li&gt;Provide an updated high-level overview of your system architecture.&lt;/li&gt;
&lt;li&gt;Explain what tools/technologies you are using, what role they play in your project development, and any changes you may have made since Milestone 1.&lt;/li&gt;
&lt;li&gt;Explain what parts of your design are implemented, and which parts remain to be implemented by referencing your updated UML diagram(s) and Database Schema.&lt;/li&gt;
&lt;li&gt;Walk through your UI (and/or internal workflow) and explain the use case functionality it demonstrates.&lt;/li&gt;
&lt;li&gt;Discuss your automated test strategy, and run your unit tests to demonstrate your testing framework, and describe what is happening.&lt;/li&gt;
&lt;li&gt;Briefly talk about how you plan to evolve the system to implement the remaining functionality.&lt;/li&gt;
&lt;li&gt;Plan your demonstration carefully. You need to convince us that your system is 50% complete. Make sure your demonstration convinces us!&lt;/li&gt;
&lt;li&gt;Please do a dry run before class. Because of the limited amount of time we have in class, we can’t wait for your team to troubleshoot issues that arise during the presentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;milestone-2---presentation--demonstration&#34;&gt;Milestone 2 - Presentation / Demonstration&lt;/h3&gt;
&lt;h4 id=&#34;links&#34;&gt;Links&lt;/h4&gt;
&lt;p&gt;The Google Slides presentation for milestone 2 can be found &lt;a href=&#34;https://docs.google.com/presentation/d/1rxATu5ASZXZj-wO9dupdV1CwlgddWFkx8h79uTTVTI8/edit?usp=drive_link&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MS3 - Final Working System</title>
      <link>/project-milestones/fall-2023/ms3---final-working-system/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/project-milestones/fall-2023/ms3---final-working-system/index.html</guid>
      <description>&lt;h3 id=&#34;main-task&#34;&gt;Main Task&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;The task is to complete a final report documenting your project, and to give a presentation on the project. Our expectations for the report are described in the Final Report Details document.
&lt;ul&gt;
&lt;li&gt;We strongly encourage you to make an appointment and visit the Writing Center in the Center for Teaching and Learning to get help from a writing tutor. Bring your document with you!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;presentation-guidelines&#34;&gt;Presentation Guidelines&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Each project team will give a presentation of about 60 to 75 minutes. Larger teams (with multiple sub-teams) will likely run longer. There may also be an extensive question and answer period. All presentations need to be limited to less than two hours (including the question and answer period).&lt;/li&gt;
&lt;li&gt;You should use some presentation software such as PowerPoint or Google Slides for your presentation. Your slides should contain brief bulleted points and graphics that provide overall context for your bullet points. Slides should not be a “wall of text”, and please avoid reading your slides or a prepared script.
&lt;ul&gt;
&lt;li&gt;NOTE: You will have already submitted your draft technical report before your final milestone presentation. You can leverage the draft report contents for the figures, diagrams, pictures, screen captures, etc that will appear in your presentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Please rehearse your presentation! We can’t allow any presentation to go over its allotted time. You may wish to have a few notecards for reference. However, you should not read directly from your notecards or from your slides. This makes for a very boring and painful presentation.&lt;/li&gt;
&lt;li&gt;Keep in mind that the audience for your presentation consists of students and faculty in CS and Engineering, as well as your clients, alumni and technical advisors. Don’t assume that the audience knows anything about your specific project. However, you may assume that the audience is reasonably knowledgeable about computers, software, etc.&lt;/li&gt;
&lt;li&gt;Don’t get too bogged down in details. As with any form of technical communication, you want to emphasize the most important and interesting information. Provide supporting details if they are necessary, but otherwise try to keep the presentation at a fairly high level.&lt;/li&gt;
&lt;li&gt;Here is a suggested structure for your presentation:
&lt;ul&gt;
&lt;li&gt;Background: What problem were you trying to solve? Discuss the state of the project at the begining of the Fall, and the new/modified system requirements that you addressed. Show a diagram of your overall system architecture, how the pieces fit together and interact, and how data flows between them.&lt;/li&gt;
&lt;li&gt;Analysis and design: Discuss your design model. In this part of the presentation, you must show a UML class diagram illustrating the most important classes and methods in your system, and how they relate/interact with each other. Please use multiple UML diagrams if a single diagram would have too many classes. You must also show your Database Schema, and show how your tables interact with your classes. You may also use multiple slides for your datbase schema for clarity. This is also a good opportunity to discuss how the design of the system changed as you worked on the implementation.&lt;/li&gt;
&lt;li&gt;Discuss the development tools/technologies that you ended up using. Describe what they contribute to the project.&lt;/li&gt;
&lt;li&gt;Implementation: What were the most interesting things you encountered/learned when you implemented the system? If you used any interesting programming techniques, this is a good opportunity to discuss them. Do not show code during your presentation.&lt;/li&gt;
&lt;li&gt;Demonstration: Show your system working. Demonstrate the most important/interesting features. You should have a scripted demonstration that you practiced multiple times prior to the presentation. One person runs the demonstration while others describe what is happening, and why. You do NOT need to show every feature of your software, but certainly show the most important/interesting/challenging aspects of your project. If you have a multiple major components to your system (frontend UI, mobile app, HW, simulator, backend server/DB), demonstrate end-to-end scenarios where information from one end reaches all the eay to other end, and possibly back again.&lt;/li&gt;
&lt;li&gt;Discuss your automated test framework, and demonstrate it in action.&lt;/li&gt;
&lt;li&gt;Future Work: Since most teams are working on multi-semester/multi-year projects, describe the state of the project as it will be for the incoming team in the Spring. Also, show that the future work you present is captured as issues in your issue tracker. Many of you may be resuming work on the same project in the Spring, and there could be new students joining the project.&lt;/li&gt;
&lt;li&gt;Conclusions: Sum up what you accomplished and what you learned, particularly for underclassmen. If there are aspects of the project you would do differently if you started again from scratch, mention them. You can also talk about how you might want to extend the system in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;All of the members of your team must make significant contributions to the presentation.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;milestone-3---presentation--demonstration&#34;&gt;Milestone 3 - Presentation / Demonstration&lt;/h3&gt;
&lt;h4 id=&#34;links&#34;&gt;Links&lt;/h4&gt;
&lt;p&gt;The Google Slides presentation for milestone 3 can be found &lt;a href=&#34;https://docs.google.com/presentation/d/16aQrNHLUBLhj_hsnZceSQvtIxRZ9tp1HctWL3ttBOro/edit#slide=id.g29972c97951_7_17235&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>